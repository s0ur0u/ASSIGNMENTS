			Test Your Knowledge

1-What are the six combinations of access modifier keywords and what do they do?
	There are six different types of access modifiers:
    -Public
    -Private
    -Protected
    -Internal
    -Protected Internal
    -Private Protected


2-What is the difference between the static, const, and readonly keywords when applied to a type member?
	The first, const, is initialized during compile-time and the latter, readonly, initialized is by the latest run-time. The second difference is that readonly can only be initialized at the class-level. Another important difference is that const variables can be referenced through "ClassName.


3-What does a constructor do?
	A constructor is a special method of a class or structure in object-oriented programming that initializes a newly created object of that type. Whenever an object is created, the constructor is called automatically.


4-Why is the partial keyword useful?
	The partial keyword indicates that other parts of the class, struct, or interface can be defined in the namespace. All the parts must use the partial keyword. All the parts must be available at compile time to form the final type.


5-What is a tuple?
	A tuple is a data stucture that contains a sequence of elements of different data types.


6-What does the C# record keyword do?
Beginning with C# 9 you can use the record keyword dodefine a reference type that provides built-in functionality for encapsulation data. C# 10 allows the record class syntax as a synonym to clarify a reference type, and record struct to define a value type with similar functionality.


7-What does overloading and overriding mean?
	Overriding in C# is to provide a specific implementation in a derived class method for a method already existing in the base class. Overloading in C# is to create multiple methods with the same name with different implementations.


8-What is the difference between a field and a property?
	A field is a variable of any type that is declared directly in a class. A property is a member that provides a flexible mechanism to read, write or compute the value of a private field.


9-How do you make a method parameter optional?
	 Optional parameters are defined at the end of the parameter list, after any required parameters. We can implement optional parameters by assigning a default value for the parameters.


10-What is an interface and how is it different from abstract class?
	An abstract class allows you to create functionality that subclasses can implement or override. An interface only allows you to define functionality, not implement it.


11-What accessibility level are members of an interface?	
	Interface members are public by default because the purpose of an interface is to enable other types to access a class or struct. Interface member declarations may include any access modifier.


12-True/False. Polymorphism allows derived classes to provide different implementations of the same method.
	True


13-True/False. The override keyword is used to indicate that a method in a derived class is providing its own implementation of a method.
	True


14-True/False. The new keyword is used to indicate that a method in a derived class is providing its own implementation of a method.
	False


15-True/False. Abstract methods can be used in a normal (non-abstract) class. 
	True


16-True/False. Normal (non-abstract) methods can be used in an abstract class. 
	True


17-True/False. Derived classes can override methods that were virtual in the base class.
	True


18-True/False.Derived classes can override methods that were abstract in the base class.
	False


19-True/False.In a derived class, you can override a method that was neither virtual non abstract in the base class.
	True


20-True/False. A class that implements an interface does not have to provide an
implementation for all of the members of the interface.
	False


21-True/False. A class that implements an interface is allowed to have other members that arenâ€™t defined in the interface.
	True


22-True/False. A class can have more than one base class.
	True


23-True/False. A class can implement more than one interface.
	True