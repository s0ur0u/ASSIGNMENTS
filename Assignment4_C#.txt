				04 Generics

	Test your Knowledge

1-Describe the problem generics address?
	Generics are classes, structures, interfaces, and methods that have placeholders (type parameters) for one or more of the types that they store or use. 


2-How would you create a list of strings, using the generic List class?
	The List<T>Class represents a strongly type list of objects that can be accessed by the index. It provides methods to search, sort, and manupulation lists.


3-How many generic type parameters does the Dictionary class have?
	The Dictionary<TKey,TValue> generic type has two type parameters, TKey and TValue , that represent the types of its keys and values.


4-True/False. When a generic class has multiple type parameters, they must all match.
	False


5-What method is used to add items to a List object?
	The List<T>.Add(T) method adds an object to the end of the list<T>


6-Name two methods that cause items to be removed from a List
	The List<T>.Remove(T) method removes the first occurence of a specific object from the List<T>.
	The List<T>RemoveAll(T) method removes all the elements from the list that matches the specified predicate.


7-How do you indicate that a class has a generic type parameter?
	A generic type is declared by specifying a type parameter in an angle brackets after a type name, e.g. TypeName<T> where T is a type parameter.


8-True/False. Generic classes can only have one generic type parameter.
	False


9-True/False. Generic type constraints limit what can be used for the generic type.
	True


10-True/False. Constraints let you use the methods of the thing you are constraining to.
	True